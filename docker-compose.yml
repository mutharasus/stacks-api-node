version: '3.7'
services:
  postgres:
    restart: always
    image: "postgres:alpine"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: stacks_blockchain_api
      POSTGRES_PORT: 5432
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - backend
  stacks-blockchain:
    image: "stacks-blockchain:2.0.11.3.0"
    command: /bin/stacks-node start --config /src/stacks-node/Config.toml
    restart: always
    ports:
      - "20443:20443"
      - "20444:20444"
    volumes:
      - ./config:/src/stacks-node
      - ./persistent-data/stacks-blockchain:/root/stacks-node/data
    networks:
      - backend
    depends_on:
      - stacks-blockchain-api
    environment:
      STACKS_LOG_DEBUG: 1
  stacks-explorer:
    image: "ghcr.io/syvita/explorer:latest"
    restart: always
    environment:
      NEXT_PUBLIC_MAINNET_API_SERVER: http://0.0.0.0:3999
    ports:
      - "3099:3000"
    networks:
      - backend
    depends_on:
      - stacks-blockchain-api
  stacks-blockchain-api:
    image: "stacks-api:v0.70.1"
    restart: always
    environment:
      NODE_ENV: production
      GIT_TAG: master
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USER: postgres
      PG_PASSWORD: postgres
      PG_DATABASE: stacks_blockchain_api
      STACKS_CHAIN_ID: 0x00000001
      V2_POX_MIN_AMOUNT_USTX: 90000000260
      STACKS_CORE_EVENT_PORT: 3700
      STACKS_CORE_EVENT_HOST: 0.0.0.0
      STACKS_BLOCKCHAIN_API_PORT: 3999
      STACKS_BLOCKCHAIN_API_HOST: 0.0.0.0
      STACKS_BLOCKCHAIN_API_DB: pg
      STACKS_CORE_RPC_HOST: stacks-blockchain
      STACKS_CORE_RPC_PORT: 20443
      #BNS_IMPORT_DIR: /bns-data
    ports:
      - "3700:3700"
      - "3999:3999"
    volumes:
      - ./bns:/bns-data
    networks:
      - backend
    depends_on:
      - postgres

volumes:
  postgres:
    external: true

networks:
  backend:

